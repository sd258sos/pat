#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
/*


cmp函数  
1。德才总分不相等   德才1》德才2
2。德才总分相等		德分1》德分2
3。德才总分相等 德分相等 num1<num2 
*/
struct node {
  int num, de, cai;
};
int cmp(struct node a,struct node b){
	if((a.cai+a.de)!=(b.de+b.cai)){
		return (a.cai+a.de)>(b.de+b.cai);
	}else if(a.de!=b.de){
		return a.de>b.de;
	}else{
		return a.num<b.num;
	}
}
/*
输入考生总人数， 最低分数线， 高分线 
考生学号，德分，才分 
在过线的情况下
第一类 德才 >= H
第二类 德>=H （不包括第一类） 
第三类 德>=才 （不包括第一第二类）
其余第四类 
14 60 80
10000001 64 90
*/
int main(){
	int n,low,high;
	scanf("%d %d %d",&n,&low,&high);
	vector<node> v[4];
	node temp;
	int total=n;
	for(int i=0;i<n;i++){
		scanf("%d %d %d",&temp.num,&temp.de,&temp.cai);
		if((temp.de)<low||(temp.cai)<low){		//不合格 
			total--;
		}else if((temp.de)>=high&&(temp.cai)>=high){//德才全
			v[0].push_back(temp);
		}else if(temp.de>=high){
			v[1].push_back(temp);
		}else if(temp.de>=temp.cai){
			v[2].push_back(temp);
		}else{
			v[3].push_back(temp);
		}
	}
	for(int i=0;i<4;i++){							//排序 
		sort(v[i].begin(),v[i].end(),cmp);
	}
	printf("%d\n",total);
	for(int i=0;i<4;i++){
		for(int j=0;j<v[i].size();j++){
			printf("%d %d %d\n",v[i][j].num,v[i][j].de,v[i][j].cai);
		}
	}
	
	return 0;
}
